[General]
#sim-time-limit = 100s

**.bitrate = 100Mbps


## tcp apps
**.numApps = 1
**.client*.app[*].typename = "CustomTcpSessionApp"
**.client*.app[0].active = true
**.client*.app[0].localPort = -1
**.client*.app[0].connectAddress = "server"
**.client*.app[0].connectPort = 8080
**.client*.app[0].sendScript = ""
**.server*.app[*].typename = "CustomTcpEchoApp"
**.server*.app[0].localPort = 8080


**.client*.app[0].packetsCount = 1000
**.client*.app[0].dataRate = ${0.5Mbps,1Mbps,2Mbps,4Mbps,8Mbps ,16Mbps , 32Mbps,64Mbps,128Mbps,256Mbps,512Mbps}
**.client*.app[0].numBytes = 512B
**.client*.app[0].tOpen = 0s
**.client*.app[0].tSend = 0s
**.client*.app[0].tClose = 0s
**.server*.app[0].echoDelay = 0s
**.server*.app[0].echoFactor = 1
**.app[*].dataTransferMode = "bytestream" 
# default TCP implementation
**.tcp.typename = "Tcp"
**.tcp.nagleEnabled = false
**.tcp.msl = 0s
**.queue.typename = "DropTailQueue"
**.queue.dataQueue.typename = "DropTailQueue"
**.queue.packetCapacity = 100
**.queue.dataQueue.packetCapacity = 100
**.queue.dataCapacity = 51200Byte
**.queue.dataQueue.dataCapacity =51200Byte



*.configurator.config=xml("<config><interface hosts='*' address='192.168.1.x' netmask='255.255.255.0'/></config>")

[Config Ethernet_CSMACD_Half_duplex]
network = customtcpclientserver.ethernetTcpClientServer
**.eth[*].mac.result-recording-modes = stats
**.eth[*].csmacdSupport = true
**.eth[*].mac.duplexMode = false
**.channel.result-recording-modes = stats
 #**.result-recording-modes = all
output-vector-file = "${resultdir}/eth/${configname}-${runnumber}picou.vec"
output-scalar-file = "${resultdir}/eth/${configname}-${runnumber}picou.sca"
[Config Ppp]
network = customtcpclientserver.pppTcpClientServer
**.ppp[*].result-recording-modes = stats
output-vector-file = "${resultdir}/ppp/${configname}-${runnumber}picou.vec"
output-scalar-file = "${resultdir}/ppp/${configname}-${runnumber}picou.sca"
**.result-recording-modes = all
**.channel.result-recording-modes = all